package neumont.edu.csc150.move;

import java.awt.Point;

import neumont.edu.csc150.player.Player;
import neumont.edu.csc150.player.movement.MoveListener;

public class PlayerController implements MoveListener{

	private Player player;
	private Thread mover;
	public PlayerController(Player _player){
		player = _player;
		
		mover = new Thread(new Runnable(){
			public void run(){
				while(alive){
					try {
						mover.sleep(MOVE_DELAY);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					if(current!=null){
						if(current.distance(player.getLocation())>MIN_DIST){
							double speed = player.getSpeed();
							int deltaX = current.x-player.getX();
							int deltaY = current.y-player.getY();
							double theta =  Math.atan2(deltaY,deltaX)*180/Math.PI;
							Point newLocation;
							System.out.println(theta);
							if(Math.abs(theta)<90){
								double newX = (deltaX<0?-1:1)*speed*Math.cos(theta*Math.PI/180);
								double newY = speed*Math.sin(theta*Math.PI/180);
								newLocation = player.getLocation();
								newLocation.x+=newX;
								newLocation.y+=newY;
							}else{
								double thetaPrime = 180-theta;
								double newX = (deltaX<0?-1:1)*speed*Math.cos(thetaPrime*Math.PI/180);
								double newY = speed*Math.sin(thetaPrime*Math.PI/180);
								newLocation = player.getLocation();
								newLocation.x+=newX;
								newLocation.y+=newY;
							}
							player.setLocation(newLocation);
						}
					}
				}
			}
		});
		mover.start();
	}
	
	boolean alive = true;
	
	
	
	
	public void end(){
		alive = false;
	}
	
	
	
	private Point current;
	private static int MOVE_DELAY = 25;
	private static int MIN_DIST = 10;
	
	
	public void move(Point loc) {
		current = loc;
	}
}
