package neumont.edu.csc150.player;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;

import neumont.edu.csc150.shield.Shield;
import neumont.edu.csc150.volley.Oval;

public abstract class Player extends Oval {

	
	
	//TODO
	//Find a way to strip this into a separate class
	//Because enemies need to be drawn too
	private Color playerColor;
	
	
	
	protected int health;
	protected int speed;
	protected Shield shield;
	protected int immunityThresh;
	
	private Collection<MoveListener> moveListeners;
	
	public Player(Point _location, int _size, Color _playerColor, int _health, int _speed, Shield _shield, int _immuneThresh) {
		super(_location, _size);
		playerColor = _playerColor;
		health = _health;
		speed = _speed;
		shield = _shield;
		immunityThresh = _immuneThresh;
	}
	
	public Player(int _x, int _y, int _size, Color _playerColor, int _health, int _speed, Shield _shield, int _immuneThresh) {
		super(_x,_y, _size);
		playerColor = _playerColor;
		health = _health;
		speed = _speed;
		shield = _shield;
		immunityThresh = _immuneThresh;
		init();
	}
	
	private void init(){
		moveListeners = new ArrayList<MoveListener>(0);
	}
	
	public int getHealth(){
		return health;
	}
	
	public void setHealth(int _health){
		if(_health<0){
			health=0;
		}
		else{
			health = _health;
		}
	}
	
	public int getSpeed(){
		return speed;
	}
	
	public void setSpeed(int _speed){
		speed = _speed;
	}
	
	public Shield getShield(){
		return shield;
	}
	
	public void setShield(Shield _shield){
		shield = _shield;
	}
	
	public int getImmuneThresh(){
		return immunityThresh;
	}
	
	public void setImmuneThresh(int _immuneThresh){
		immunityThresh = _immuneThresh;
	}
	
	public void paint(Graphics g){
		shield.paint(g);
		g.setColor(playerColor);
		super.paint(g);
	}
	
	public abstract void takeDamage(int _dmg);
	
	
}
