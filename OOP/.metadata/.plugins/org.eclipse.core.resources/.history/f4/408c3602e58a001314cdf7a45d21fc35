package neumont.edu.csc150.enemy;

import java.awt.Graphics;
import java.awt.Point;

public class FlickeringEnemy extends Enemy{


	private boolean flickering;
	
	public FlickeringEnemy(int _x, int _y, int _size, int _health) {
		super(_x, _y, _size, _health);
		init();
	}
	public FlickeringEnemy(Point _loc, int _size, int _health) {
		super(_loc, _size, _health);
		init();
	}
	
	private void init(){
		flickering = false;
	}
	
	protected boolean checkCollision() {
		return false;
	}
	
	protected void actionForCollision() {
		
	}
	
	
	private Thread flicker;
	private static int WAIT_TIME = 1500;
	private static int FLICKER_TIME = 3000;
	
	protected void action() {
		if(flicker==null){
			flicker = new Thread(new Runnable(){
				public void run(){
					while(true){
						try {
							this.wait(WAIT_TIME);
							flickering = true;
							this.wait(FLICKER_TIME);
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					}
				}
			});
		}
	}
	
	public void paint(Graphics g){
		if(flickering){
			g.setColor(OBTAINABLE);
		}else{
			g.setColor(ENEMY_COLOR);
		}
		super.paint(g);
	}
	
	public void pause(){
		try {
			flicker.wait();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
}
