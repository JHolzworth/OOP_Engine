package neumont.edu.csc150.player.volley;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;

import neumont.edu.csc150.player.Player;
import neumont.edu.csc150.shield.Shield;
import neumont.edu.csc150.volley.Oval;

public class VolleyPlayer extends Player{

	public boolean immune;

	public VolleyPlayer(Point _location, int _size, Color _playerColor, int _health, double _speed, Shield _shield, int _immuneThresh) {
		super(_location, _size, _playerColor, _health, _speed, _shield, _immuneThresh);
		init();
	}
	
	public VolleyPlayer(int _x, int _y, int _size, Color _playerColor, int _health, double _speed, Shield _shield, int _immuneThresh) {
		super(_x,_y, _size, _playerColor, _health, _speed, _shield, _immuneThresh);
		init();
	}
	
	private void init(){
		immune = false;
	}
	
	public boolean isColliding(Oval oval){
		boolean colliding = super.isColliding(oval);
		if(!shield.isDepleted()){
			colliding = colliding | shield.isColliding(oval);
		}
		return colliding;
	}
	
	public boolean contains(Point _location){
		boolean contains = super.contains(_location);
		if(!shield.isDepleted()){
			contains = contains | shield.contains(_location);
		}
		return contains;
	}
	
	public void takeDamage(int dmg) {
		if(!shield.isDepleted()){
			shield.takeDamage(dmg);
		}else{
			if(!immune){
				setHealth(health-dmg);
				//turn immune for immunity delay
			}
		}
	}
	
	public void paint(Graphics g){
		
	}
}
